#!/bin/bash
#
# Copyright(c) 2012-2020 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause-Clear
#

. $(dirname $3)/conf_framework

check() {
    cur_name=$(basename $2)
    config_file_path=$1
    if compile_module $cur_name "int (*fn1)(struct fsnotify_mark*, struct inode*, struct vfsmount*, int) = NULL;typeof(&fsnotify_add_mark) fn2 = fn1;" "linux/fsnotify_backend.h"
    then
        echo $cur_name "1" >> $config_file_path
    elif compile_module $cur_name "int (*fn1)(struct fsnotify_mark*, fsnotify_connp_t*, unsigned int, int) = NULL;typeof(&fsnotify_add_mark) fn2 = fn1;" "linux/fsnotify_backend.h"
    then
        echo $cur_name "2" >> $config_file_path
    elif compile_module $cur_name "int (*fn1)(struct fsnotify_mark*, fsnotify_connp_t*, unsigned int, int, __kernel_fsid_t*) = NULL;typeof(&fsnotify_add_mark) fn2 = fn1;" "linux/fsnotify_backend.h"
    then
        echo $cur_name "3" >> $config_file_path
    else
        echo $cur_name "X" >> $config_file_path
    fi
}

apply() {
    case "$1" in
    "1")
        add_define "IOTRACE_FSNOTIFY_ADD_MARK(mark, inode) \\
            (fsnotify_ops.add_mark(mark, inode, NULL, 0));" ;;
    "2")
        add_define "IOTRACE_FSNOTIFY_ADD_MARK(mark, inode) \\
            (fsnotify_ops.add_mark(mark, &inode->i_fsnotify_marks, \\
                                   FSNOTIFY_OBJ_TYPE_INODE, 0));" ;;
    "3")
        add_define "IOTRACE_FSNOTIFY_ADD_MARK(mark, inode) \\
            (fsnotify_ops.add_mark(mark, &inode->i_fsnotify_marks, \\
                                   FSNOTIFY_OBJ_TYPE_INODE, 0, NULL));" ;;
    *)
        exit 1
    esac
}

conf_run $@

