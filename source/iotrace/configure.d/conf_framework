#!/bin/bash
#
# Copyright(c) 2012-2020 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause
#

SCRIPTPATH=`dirname $0`
SCRIPTPATH=`realpath $SCRIPTPATH`
DEFINE_FILE=$OUT/iotrace.bpf.config.h

add_define() {
	printf "#define %s\n" $1 >> $DEFINE_FILE
}

add_function() {
	printf "%s\n" $1 >> $DEFINE_FILE
}

compile_check(){
	if [ $# -gt 2 ]
	then
		i=3
		while [ "$i" -le "$#" ]; do
			INCLUDE+=$(echo -e "\n#include <${!i}>\\n")
			i=$((i + 1))
		done
	else
		INCLUDE=""
	fi

	config_file=$1
	check_dir=$OUT/configure.d/${config_file}_dir
	check_log=${check_dir}/log
	check_file=$check_dir/test.c
	check_prog=$check_dir/test

	mkdir -p $check_dir

	############# TEST PROGRAM #############
	cat > $check_file <<- EOF
	#include "vmlinux.h"
	$INCLUDE
	int main(void) {
		$2;
		return 0;
	}
	EOF
	#######################################

	echo "### $2 ###" >> $check_log

	gcc $check_file -I $OUT -o $check_prog &>> $check_log
	local ret=$?

	return $ret
}

# $1 - name of function to be called
# $2 - path to file with valid configs
# $3 - name of processed template file
conf_run() {
	local OLD_IFS=$IFS
	IFS='?'

	case "$1" in
		"check") check $2 $3;;
		"apply") apply $2 ;;
	esac

	IFS=$OLD_IFS
}
