#!/bin/bash
#
# Copyright(c) 2012-2020 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause
#

. $(dirname $3)/conf_framework

check() {
    cur_name=$(basename $2)
    config_file_path=$1
    if compile_module $cur_name "int (*fn1)(struct fsnotify_group*, struct inode*, struct fsnotify_mark *, struct fsnotify_mark *, u32, const void*, int,const unsigned char*, u32,struct fsnotify_iter_info*) = NULL;struct fsnotify_ops ops; ops.handle_event = fn1;" "linux/fsnotify_backend.h"
    then
        echo $cur_name "1" >> $config_file_path
    elif compile_module $cur_name "int (*fn1)(struct fsnotify_group*, struct inode*, u32, const void*, int,const unsigned char*, u32,struct fsnotify_iter_info*) = NULL;struct fsnotify_ops ops; ops.handle_event = fn1;" "linux/fsnotify_backend.h"
    then
        echo $cur_name "2" >> $config_file_path
    elif compile_module $cur_name "int (*fn1)(struct fsnotify_group*, struct inode*, u32, const void*, int,const struct qstr*, u32,struct fsnotify_iter_info*) = NULL;struct fsnotify_ops ops; ops.handle_event = fn1;" "linux/fsnotify_backend.h"
    then
        echo $cur_name "3" >> $config_file_path
    else
        echo $cur_name "X" >> $config_file_path
    fi
}

apply() {
    case "$1" in
    "1")
        add_define "IOTRACE_FSNOTIFY_VERSION 1" ;;
    "2")
        add_define "IOTRACE_FSNOTIFY_VERSION 2" ;;
    "3")
        add_define "IOTRACE_FSNOTIFY_VERSION 3" ;;
    *)
        exit 1
    esac
}

conf_run $@

